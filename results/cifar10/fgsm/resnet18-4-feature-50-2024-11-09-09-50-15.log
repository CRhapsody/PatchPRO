[2024-11-09 09:50:15,842][INFO] 
===== resnet18-4-feature-50-2024-11-09-09-50-15 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0004
  lr: 10
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: resnet18
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 4
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x7b3f957fb5e0>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7b3f95787f70>
===== end of resnet18-4-feature-50-2024-11-09-09-50-15 configuration =====

[2024-11-09 09:50:15,842][INFO] ===== start repair ======
[2024-11-09 09:50:15,842][INFO] For pgd attack net
[2024-11-09 09:50:16,684][INFO] --Test repair set accuracy 0.0
[2024-11-09 09:50:16,687][INFO] --Test original set accuracy 0.98
[2024-11-09 09:50:16,758][INFO] --Test test set accuracy 0.8833
[2024-11-09 09:50:16,763][INFO] --Test attack test set accuracy 0.006
[2024-11-09 09:50:16,832][INFO] --Test train set accuracy 0.9988
[2024-11-09 09:50:16,832][INFO] get the feature of the repairset, testset and trainset
[2024-11-09 09:50:17,046][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-09 09:50:17,046][INFO] --sample the 0 part of the originalset
[2024-11-09 09:50:17,046][INFO] --FGSM sample 1 image
[2024-11-09 09:50:17,593][INFO] --FGSM sample 2 image
[2024-11-09 09:50:18,147][INFO] --FGSM sample 3 image
[2024-11-09 09:50:18,703][INFO] --FGSM sample 4 image
[2024-11-09 09:50:19,261][INFO] --FGSM sample 5 image
[2024-11-09 09:50:19,815][INFO] --FGSM sample 6 image
[2024-11-09 09:50:20,369][INFO] --FGSM sample 7 image
[2024-11-09 09:50:20,925][INFO] --FGSM sample 8 image
[2024-11-09 09:50:21,481][INFO] --FGSM sample 9 image
[2024-11-09 09:50:22,037][INFO] --FGSM sample 10 image
[2024-11-09 09:50:22,595][INFO] --FGSM sample 11 image
[2024-11-09 09:50:23,152][INFO] --FGSM sample 12 image
[2024-11-09 09:50:23,707][INFO] --FGSM sample 13 image
[2024-11-09 09:50:24,260][INFO] --FGSM sample 14 image
[2024-11-09 09:50:24,813][INFO] --FGSM sample 15 image
[2024-11-09 09:50:25,365][INFO] --FGSM sample 16 image
[2024-11-09 09:50:25,918][INFO] --FGSM sample 17 image
[2024-11-09 09:50:26,470][INFO] --FGSM sample 18 image
[2024-11-09 09:50:27,023][INFO] --FGSM sample 19 image
[2024-11-09 09:50:27,574][INFO] --FGSM sample 20 image
[2024-11-09 09:50:28,129][INFO] --FGSM sample 21 image
[2024-11-09 09:50:28,681][INFO] --FGSM sample 22 image
[2024-11-09 09:50:29,233][INFO] --FGSM sample 23 image
[2024-11-09 09:50:29,782][INFO] --FGSM sample 24 image
[2024-11-09 09:50:30,332][INFO] --FGSM sample 25 image
[2024-11-09 09:50:30,887][INFO] --FGSM sample 26 image
[2024-11-09 09:50:31,438][INFO] --FGSM sample 27 image
[2024-11-09 09:50:34,719][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-09 09:50:34,719][INFO] --FGSM sample 28 image
[2024-11-09 09:50:35,271][INFO] --FGSM sample 29 image
[2024-11-09 09:50:35,824][INFO] --FGSM sample 30 image
[2024-11-09 09:50:36,378][INFO] --FGSM sample 31 image
[2024-11-09 09:50:36,932][INFO] --FGSM sample 32 image
[2024-11-09 09:50:37,483][INFO] --FGSM sample 33 image
[2024-11-09 09:50:38,035][INFO] --FGSM sample 34 image
[2024-11-09 09:50:38,587][INFO] --FGSM sample 35 image
[2024-11-09 09:50:39,138][INFO] --FGSM sample 36 image
[2024-11-09 09:50:39,689][INFO] --FGSM sample 37 image
[2024-11-09 09:50:40,239][INFO] --FGSM sample 38 image
[2024-11-09 09:50:40,790][INFO] --FGSM sample 39 image
[2024-11-09 09:50:41,342][INFO] --FGSM sample 40 image
[2024-11-09 09:50:41,895][INFO] --FGSM sample 41 image
[2024-11-09 09:50:42,449][INFO] --FGSM sample 42 image
[2024-11-09 09:50:45,727][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-09 09:50:45,727][INFO] --FGSM sample 43 image
[2024-11-09 09:50:46,278][INFO] --FGSM sample 44 image
[2024-11-09 09:50:46,832][INFO] --FGSM sample 45 image
[2024-11-09 09:50:47,385][INFO] --FGSM sample 46 image
[2024-11-09 09:50:47,938][INFO] --FGSM sample 47 image
[2024-11-09 09:50:48,488][INFO] --FGSM sample 48 image
[2024-11-09 09:50:49,039][INFO] --FGSM sample 49 image
[2024-11-09 09:50:49,592][INFO] --FGSM sample 50 image
[2024-11-09 09:50:50,822][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-09 09:50:51,182][INFO] --Test repair set accuracy 0.0
[2024-11-09 09:50:51,190][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-09 09:50:51,191][INFO] [0m 0s (0.000 seconds)] Start repair part 0: 0
[2024-11-09 09:50:51,191][INFO] [0m 0s (0.000 seconds)] After epoch 0:
[2024-11-09 09:50:51,191][INFO] Loaded 50 abstractions for training.
[2024-11-09 09:50:51,245][INFO] min loss 0.5899167656898499, max loss 18.65599250793457.
[2024-11-09 09:50:51,246][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:2', dtype=torch.uint8).
[2024-11-09 09:50:51,261][INFO] Test set accuracy 0.8833.
[2024-11-09 09:50:51,261][INFO] repair set accuracy 0.02.
[2024-11-09 09:50:51,261][INFO] attacked test set accuracy 0.034.
[2024-11-09 09:50:51,261][INFO] 
[0m 0s (0.071 seconds)] Starting epoch 1:
[2024-11-09 09:50:51,452][INFO] [0m 0s (0.261 seconds)] After epoch 1:
[2024-11-09 09:50:51,452][INFO] Loaded 50 abstractions for training.
[2024-11-09 09:50:51,507][INFO] min loss 0.0, max loss 0.0.
[2024-11-09 09:50:51,507][INFO] All 50 abstractions certified.
[2024-11-09 09:50:51,522][INFO] Test set accuracy 0.8833.
[2024-11-09 09:50:51,522][INFO] repair set accuracy 1.0.
[2024-11-09 09:50:51,522][INFO] attacked test set accuracy 1.0.
[2024-11-09 09:50:51,528][INFO] Accuracy at every epoch: [0.8833, 0.8833]
[2024-11-09 09:50:51,529][INFO] After 1 epochs / 0m 0s (0.331 seconds), eventually the trained network got certified? True, with 0.8833 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-09 09:50:51,529][INFO] final test
[2024-11-09 09:50:51,530][INFO] --Test set accuracy 0.8833
[2024-11-09 09:50:51,537][INFO] --Test repair set accuracy 1.0
[2024-11-09 09:50:51,544][INFO] --Test attack test set accuracy 1.0
[2024-11-09 09:50:51,544][INFO] traing time 0.3533450699178502s
[2024-11-09 09:50:51,547][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-09 09:50:51,547][INFO] tensor([1.0000, 0.3314, 1.0000, 0.8833])
[2024-11-09 09:50:51,548][INFO] Total Cost Time: 35.70578779699281s.



