[2024-11-25 02:14:24,831][INFO] 
===== resnet18-4-feature-50-2024-11-25-02-14-24 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0004
  lr: 1
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: resnet18
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 4
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x7327a29ded30>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7327a29dedc0>
===== end of resnet18-4-feature-50-2024-11-25-02-14-24 configuration =====

[2024-11-25 02:14:24,831][INFO] ===== start repair ======
[2024-11-25 02:14:24,831][INFO] For pgd attack net
[2024-11-25 02:14:31,274][INFO] --Test repair set accuracy 0.0
[2024-11-25 02:14:31,277][INFO] --Test original set accuracy 0.98
[2024-11-25 02:14:31,332][INFO] --Test test set accuracy 0.8832
[2024-11-25 02:14:31,335][INFO] --Test attack test set accuracy 0.006
[2024-11-25 02:14:31,390][INFO] --Test train set accuracy 0.9988
[2024-11-25 02:14:31,390][INFO] get the feature of the repairset, testset and trainset
[2024-11-25 02:14:31,501][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-25 02:14:31,501][INFO] --sample the 0 part of the originalset
[2024-11-25 02:14:31,501][INFO] --FGSM sample 1 image
[2024-11-25 02:14:32,304][INFO] --FGSM sample 2 image
[2024-11-25 02:14:33,416][INFO] --FGSM sample 3 image
[2024-11-25 02:14:34,523][INFO] --FGSM sample 4 image
[2024-11-25 02:14:35,632][INFO] --FGSM sample 5 image
[2024-11-25 02:14:36,734][INFO] --FGSM sample 6 image
[2024-11-25 02:14:37,834][INFO] --FGSM sample 7 image
[2024-11-25 02:14:38,947][INFO] --FGSM sample 8 image
[2024-11-25 02:14:40,084][INFO] --FGSM sample 9 image
[2024-11-25 02:14:41,200][INFO] --FGSM sample 10 image
[2024-11-25 02:14:42,317][INFO] --FGSM sample 11 image
[2024-11-25 02:14:43,445][INFO] --FGSM sample 12 image
[2024-11-25 02:14:44,553][INFO] --FGSM sample 13 image
[2024-11-25 02:14:45,658][INFO] --FGSM sample 14 image
[2024-11-25 02:14:46,751][INFO] --FGSM sample 15 image
[2024-11-25 02:14:47,853][INFO] --FGSM sample 16 image
[2024-11-25 02:14:48,960][INFO] --FGSM sample 17 image
[2024-11-25 02:14:50,094][INFO] --FGSM sample 18 image
[2024-11-25 02:14:51,212][INFO] --FGSM sample 19 image
[2024-11-25 02:14:52,315][INFO] --FGSM sample 20 image
[2024-11-25 02:14:53,410][INFO] --FGSM sample 21 image
[2024-11-25 02:14:54,509][INFO] --FGSM sample 22 image
[2024-11-25 02:14:55,636][INFO] --FGSM sample 23 image
[2024-11-25 02:14:56,758][INFO] --FGSM sample 24 image
[2024-11-25 02:14:57,879][INFO] --FGSM sample 25 image
[2024-11-25 02:14:59,008][INFO] --FGSM sample 26 image
[2024-11-25 02:15:00,114][INFO] --FGSM sample 27 image
[2024-11-25 02:15:06,809][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-25 02:15:06,810][INFO] --FGSM sample 28 image
[2024-11-25 02:15:07,891][INFO] --FGSM sample 29 image
[2024-11-25 02:15:08,959][INFO] --FGSM sample 30 image
[2024-11-25 02:15:10,026][INFO] --FGSM sample 31 image
[2024-11-25 02:15:11,067][INFO] --FGSM sample 32 image
[2024-11-25 02:15:12,128][INFO] --FGSM sample 33 image
[2024-11-25 02:15:13,172][INFO] --FGSM sample 34 image
[2024-11-25 02:15:14,278][INFO] --FGSM sample 35 image
[2024-11-25 02:15:15,413][INFO] --FGSM sample 36 image
[2024-11-25 02:15:16,533][INFO] --FGSM sample 37 image
[2024-11-25 02:15:17,658][INFO] --FGSM sample 38 image
[2024-11-25 02:15:18,779][INFO] --FGSM sample 39 image
[2024-11-25 02:15:19,882][INFO] --FGSM sample 40 image
[2024-11-25 02:15:20,998][INFO] --FGSM sample 41 image
[2024-11-25 02:15:22,126][INFO] --FGSM sample 42 image
[2024-11-25 02:15:28,852][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-25 02:15:28,852][INFO] --FGSM sample 43 image
[2024-11-25 02:15:29,993][INFO] --FGSM sample 44 image
[2024-11-25 02:15:31,088][INFO] --FGSM sample 45 image
[2024-11-25 02:15:32,199][INFO] --FGSM sample 46 image
[2024-11-25 02:15:33,327][INFO] --FGSM sample 47 image
[2024-11-25 02:15:34,445][INFO] --FGSM sample 48 image
[2024-11-25 02:15:35,574][INFO] --FGSM sample 49 image
[2024-11-25 02:15:36,699][INFO] --FGSM sample 50 image
[2024-11-25 02:15:38,007][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-25 02:15:42,525][INFO] --Test repair set accuracy 0.0
[2024-11-25 02:15:42,645][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-25 02:15:42,650][INFO] [0m 0s (0.002 seconds)] Start repair part 0: 0
[2024-11-25 02:15:42,651][INFO] [0m 0s (0.002 seconds)] After epoch 0:
[2024-11-25 02:15:42,651][INFO] Loaded 50 abstractions for training.
[2024-11-25 02:15:43,127][INFO] min loss 1.6606860160827637, max loss 148.60806274414062.
[2024-11-25 02:15:43,129][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:1', dtype=torch.uint8).
[2024-11-25 02:15:43,171][INFO] Test set accuracy 0.8832.
[2024-11-25 02:15:43,171][INFO] repair set accuracy 0.0.
[2024-11-25 02:15:43,171][INFO] attacked test set accuracy 0.006.
[2024-11-25 02:15:43,171][INFO] 
[0m 0s (0.522 seconds)] Starting epoch 1:
[2024-11-25 02:15:44,252][INFO] [0m 1s (1.603 seconds)] After epoch 1:
[2024-11-25 02:15:44,252][INFO] Loaded 50 abstractions for training.
[2024-11-25 02:15:44,722][INFO] min loss 0.0, max loss 14.256423950195312.
[2024-11-25 02:15:44,723][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:1', dtype=torch.uint8).
[2024-11-25 02:15:44,766][INFO] Test set accuracy 0.8832.
[2024-11-25 02:15:44,767][INFO] repair set accuracy 0.54.
[2024-11-25 02:15:44,767][INFO] attacked test set accuracy 0.552.
[2024-11-25 02:15:44,767][INFO] 
[0m 2s (2.118 seconds)] Starting epoch 2:
[2024-11-25 02:15:45,536][INFO] [0m 2s (2.887 seconds)] After epoch 2:
[2024-11-25 02:15:45,537][INFO] Loaded 50 abstractions for training.
[2024-11-25 02:15:45,826][INFO] min loss 0.0, max loss 12.508251190185547.
[2024-11-25 02:15:45,827][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:1', dtype=torch.uint8).
[2024-11-25 02:15:45,853][INFO] Test set accuracy 0.8832.
[2024-11-25 02:15:45,853][INFO] repair set accuracy 0.8.
[2024-11-25 02:15:45,853][INFO] attacked test set accuracy 0.798.
[2024-11-25 02:15:45,853][INFO] 
[0m 3s (3.204 seconds)] Starting epoch 3:
[2024-11-25 02:15:46,570][INFO] [0m 3s (3.921 seconds)] After epoch 3:
[2024-11-25 02:15:46,570][INFO] Loaded 50 abstractions for training.
[2024-11-25 02:15:46,861][INFO] min loss 0.0, max loss 10.863225936889648.
[2024-11-25 02:15:46,862][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:1', dtype=torch.uint8).
[2024-11-25 02:15:46,888][INFO] Test set accuracy 0.8832.
[2024-11-25 02:15:46,888][INFO] repair set accuracy 0.9.
[2024-11-25 02:15:46,888][INFO] attacked test set accuracy 0.926.
[2024-11-25 02:15:46,888][INFO] 
[0m 4s (4.239 seconds)] Starting epoch 4:
[2024-11-25 02:15:47,607][INFO] [0m 4s (4.958 seconds)] After epoch 4:
[2024-11-25 02:15:47,607][INFO] Loaded 50 abstractions for training.
[2024-11-25 02:15:47,897][INFO] min loss 0.0, max loss 9.274524688720703.
[2024-11-25 02:15:47,897][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:1', dtype=torch.uint8).
[2024-11-25 02:15:47,923][INFO] Test set accuracy 0.8832.
[2024-11-25 02:15:47,923][INFO] repair set accuracy 0.98.
[2024-11-25 02:15:47,923][INFO] attacked test set accuracy 0.986.
[2024-11-25 02:15:47,923][INFO] 
[0m 5s (5.274 seconds)] Starting epoch 5:
[2024-11-25 02:15:48,577][INFO] [0m 5s (5.928 seconds)] After epoch 5:
[2024-11-25 02:15:48,577][INFO] Loaded 50 abstractions for training.
[2024-11-25 02:15:48,859][INFO] min loss 0.0, max loss 7.7206034660339355.
[2024-11-25 02:15:48,860][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:1', dtype=torch.uint8).
[2024-11-25 02:15:48,886][INFO] Test set accuracy 0.8832.
[2024-11-25 02:15:48,886][INFO] repair set accuracy 1.0.
[2024-11-25 02:15:48,886][INFO] attacked test set accuracy 1.0.
[2024-11-25 02:15:48,941][INFO] Accuracy at every epoch: [0.8832, 0.8832, 0.8832, 0.8832, 0.8832, 0.8832]
[2024-11-25 02:15:48,941][INFO] After 5 epochs / 0m 6s (6.237 seconds), eventually the trained network got certified? False, with 0.8832 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-25 02:15:48,941][INFO] final test
[2024-11-25 02:15:48,943][INFO] --Test set accuracy 0.8832
[2024-11-25 02:15:48,955][INFO] --Test repair set accuracy 1.0
[2024-11-25 02:15:48,967][INFO] --Test attack test set accuracy 1.0
[2024-11-25 02:15:48,967][INFO] traing time 6.318302842992125s
[2024-11-25 02:15:48,979][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-25 02:15:48,979][INFO] tensor([5.0000, 6.2370, 0.0000, 0.8832])
[2024-11-25 02:15:48,980][INFO] Total Cost Time: 84.14915236699744s.



