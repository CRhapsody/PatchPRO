[2024-11-12 08:32:32,877][INFO] 
===== resnet18-4-feature-50-2024-11-12-08-32-32 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0004
  lr: 1
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: resnet18
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 4
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x7fdd8ceaab80>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7fddc57d3ee0>
===== end of resnet18-4-feature-50-2024-11-12-08-32-32 configuration =====

[2024-11-12 08:32:32,877][INFO] ===== start repair ======
[2024-11-12 08:32:32,877][INFO] For pgd attack net
[2024-11-12 08:32:33,706][INFO] --Test repair set accuracy 0.0
[2024-11-12 08:32:33,708][INFO] --Test original set accuracy 0.98
[2024-11-12 08:32:33,778][INFO] --Test test set accuracy 0.8833
[2024-11-12 08:32:33,783][INFO] --Test attack test set accuracy 0.006
[2024-11-12 08:32:33,852][INFO] --Test train set accuracy 0.9988
[2024-11-12 08:32:33,852][INFO] get the feature of the repairset, testset and trainset
[2024-11-12 08:32:34,209][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-12 08:32:34,209][INFO] --sample the 0 part of the originalset
[2024-11-12 08:32:34,209][INFO] --FGSM sample 1 image
[2024-11-12 08:32:34,646][INFO] --FGSM sample 2 image
[2024-11-12 08:32:35,089][INFO] --FGSM sample 3 image
[2024-11-12 08:32:35,532][INFO] --FGSM sample 4 image
[2024-11-12 08:32:35,978][INFO] --FGSM sample 5 image
[2024-11-12 08:32:36,424][INFO] --FGSM sample 6 image
[2024-11-12 08:32:36,862][INFO] --FGSM sample 7 image
[2024-11-12 08:32:37,300][INFO] --FGSM sample 8 image
[2024-11-12 08:32:37,740][INFO] --FGSM sample 9 image
[2024-11-12 08:32:38,181][INFO] --FGSM sample 10 image
[2024-11-12 08:32:38,623][INFO] --FGSM sample 11 image
[2024-11-12 08:32:39,069][INFO] --FGSM sample 12 image
[2024-11-12 08:32:39,511][INFO] --FGSM sample 13 image
[2024-11-12 08:32:39,956][INFO] --FGSM sample 14 image
[2024-11-12 08:32:40,399][INFO] --FGSM sample 15 image
[2024-11-12 08:32:40,843][INFO] --FGSM sample 16 image
[2024-11-12 08:32:41,289][INFO] --FGSM sample 17 image
[2024-11-12 08:32:41,730][INFO] --FGSM sample 18 image
[2024-11-12 08:32:42,175][INFO] --FGSM sample 19 image
[2024-11-12 08:32:42,617][INFO] --FGSM sample 20 image
[2024-11-12 08:32:43,060][INFO] --FGSM sample 21 image
[2024-11-12 08:32:43,503][INFO] --FGSM sample 22 image
[2024-11-12 08:32:43,946][INFO] --FGSM sample 23 image
[2024-11-12 08:32:44,381][INFO] --FGSM sample 24 image
[2024-11-12 08:32:44,818][INFO] --FGSM sample 25 image
[2024-11-12 08:32:45,261][INFO] --FGSM sample 26 image
[2024-11-12 08:32:45,709][INFO] --FGSM sample 27 image
[2024-11-12 08:32:48,358][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-12 08:32:48,358][INFO] --FGSM sample 28 image
[2024-11-12 08:32:48,805][INFO] --FGSM sample 29 image
[2024-11-12 08:32:49,251][INFO] --FGSM sample 30 image
[2024-11-12 08:32:49,698][INFO] --FGSM sample 31 image
[2024-11-12 08:32:50,146][INFO] --FGSM sample 32 image
[2024-11-12 08:32:50,593][INFO] --FGSM sample 33 image
[2024-11-12 08:32:51,035][INFO] --FGSM sample 34 image
[2024-11-12 08:32:51,484][INFO] --FGSM sample 35 image
[2024-11-12 08:32:51,930][INFO] --FGSM sample 36 image
[2024-11-12 08:32:52,378][INFO] --FGSM sample 37 image
[2024-11-12 08:32:52,826][INFO] --FGSM sample 38 image
[2024-11-12 08:32:53,279][INFO] --FGSM sample 39 image
[2024-11-12 08:32:53,728][INFO] --FGSM sample 40 image
[2024-11-12 08:32:54,181][INFO] --FGSM sample 41 image
[2024-11-12 08:32:54,622][INFO] --FGSM sample 42 image
[2024-11-12 08:32:57,222][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-12 08:32:57,222][INFO] --FGSM sample 43 image
[2024-11-12 08:32:57,660][INFO] --FGSM sample 44 image
[2024-11-12 08:32:58,100][INFO] --FGSM sample 45 image
[2024-11-12 08:32:58,540][INFO] --FGSM sample 46 image
[2024-11-12 08:32:58,982][INFO] --FGSM sample 47 image
[2024-11-12 08:32:59,423][INFO] --FGSM sample 48 image
[2024-11-12 08:32:59,865][INFO] --FGSM sample 49 image
[2024-11-12 08:33:00,307][INFO] --FGSM sample 50 image
[2024-11-12 08:33:02,188][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-12 08:33:04,090][INFO] --Test repair set accuracy 0.0
[2024-11-12 08:33:04,156][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-12 08:33:04,159][INFO] [0m 0s (0.001 seconds)] Start repair part 0: 0
[2024-11-12 08:33:04,159][INFO] [0m 0s (0.001 seconds)] After epoch 0:
[2024-11-12 08:33:04,159][INFO] Loaded 50 abstractions for training.
[2024-11-12 08:33:04,437][INFO] min loss 1.3678655624389648, max loss 153.9875946044922.
[2024-11-12 08:33:04,438][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-12 08:33:04,463][INFO] Test set accuracy 0.8833.
[2024-11-12 08:33:04,463][INFO] repair set accuracy 0.02.
[2024-11-12 08:33:04,463][INFO] attacked test set accuracy 0.03.
[2024-11-12 08:33:04,463][INFO] 
[0m 0s (0.305 seconds)] Starting epoch 1:
[2024-11-12 08:33:05,062][INFO] [0m 0s (0.903 seconds)] After epoch 1:
[2024-11-12 08:33:05,062][INFO] Loaded 50 abstractions for training.
[2024-11-12 08:33:05,321][INFO] min loss 0.0, max loss 14.368463516235352.
[2024-11-12 08:33:05,322][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-12 08:33:05,347][INFO] Test set accuracy 0.8833.
[2024-11-12 08:33:05,348][INFO] repair set accuracy 0.54.
[2024-11-12 08:33:05,348][INFO] attacked test set accuracy 0.56.
[2024-11-12 08:33:05,348][INFO] 
[0m 1s (1.189 seconds)] Starting epoch 2:
[2024-11-12 08:33:05,887][INFO] [0m 1s (1.729 seconds)] After epoch 2:
[2024-11-12 08:33:05,888][INFO] Loaded 50 abstractions for training.
[2024-11-12 08:33:06,149][INFO] min loss 0.0, max loss 12.620290756225586.
[2024-11-12 08:33:06,150][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-12 08:33:06,175][INFO] Test set accuracy 0.8833.
[2024-11-12 08:33:06,175][INFO] repair set accuracy 0.8.
[2024-11-12 08:33:06,175][INFO] attacked test set accuracy 0.796.
[2024-11-12 08:33:06,175][INFO] 
[0m 2s (2.017 seconds)] Starting epoch 3:
[2024-11-12 08:33:06,710][INFO] [0m 2s (2.552 seconds)] After epoch 3:
[2024-11-12 08:33:06,711][INFO] Loaded 50 abstractions for training.
[2024-11-12 08:33:06,972][INFO] min loss 0.0, max loss 10.975265502929688.
[2024-11-12 08:33:06,973][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-12 08:33:06,998][INFO] Test set accuracy 0.8833.
[2024-11-12 08:33:06,998][INFO] repair set accuracy 0.88.
[2024-11-12 08:33:06,998][INFO] attacked test set accuracy 0.906.
[2024-11-12 08:33:06,998][INFO] 
[0m 2s (2.840 seconds)] Starting epoch 4:
[2024-11-12 08:33:07,533][INFO] [0m 3s (3.375 seconds)] After epoch 4:
[2024-11-12 08:33:07,534][INFO] Loaded 50 abstractions for training.
[2024-11-12 08:33:07,795][INFO] min loss 0.0, max loss 9.386564254760742.
[2024-11-12 08:33:07,795][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-12 08:33:07,821][INFO] Test set accuracy 0.8833.
[2024-11-12 08:33:07,821][INFO] repair set accuracy 0.98.
[2024-11-12 08:33:07,821][INFO] attacked test set accuracy 0.986.
[2024-11-12 08:33:07,821][INFO] 
[0m 3s (3.663 seconds)] Starting epoch 5:
[2024-11-12 08:33:08,358][INFO] [0m 4s (4.200 seconds)] After epoch 5:
[2024-11-12 08:33:08,359][INFO] Loaded 50 abstractions for training.
[2024-11-12 08:33:08,621][INFO] min loss 0.0, max loss 7.832643985748291.
[2024-11-12 08:33:08,621][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-12 08:33:08,647][INFO] Test set accuracy 0.8833.
[2024-11-12 08:33:08,647][INFO] repair set accuracy 1.0.
[2024-11-12 08:33:08,647][INFO] attacked test set accuracy 1.0.
[2024-11-12 08:33:08,706][INFO] Accuracy at every epoch: [0.8833, 0.8833, 0.8833, 0.8833, 0.8833, 0.8833]
[2024-11-12 08:33:08,706][INFO] After 5 epochs / 0m 4s (4.488 seconds), eventually the trained network got certified? False, with 0.8833 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-12 08:33:08,706][INFO] final test
[2024-11-12 08:33:08,708][INFO] --Test set accuracy 0.8833
[2024-11-12 08:33:08,721][INFO] --Test repair set accuracy 1.0
[2024-11-12 08:33:08,732][INFO] --Test attack test set accuracy 1.0
[2024-11-12 08:33:08,733][INFO] traing time 4.574316879035905s
[2024-11-12 08:33:08,743][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-12 08:33:08,743][INFO] tensor([5.0000, 4.4884, 0.0000, 0.8833])
[2024-11-12 08:33:08,744][INFO] Total Cost Time: 35.86728950194083s.



