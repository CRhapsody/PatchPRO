[2024-11-09 10:11:51,179][INFO] 
===== resnet18-8-feature-50-2024-11-09-10-11-51 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0008
  lr: 10
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: resnet18
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 8
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x7b3f957e9550>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7b3f8fc469d0>
===== end of resnet18-8-feature-50-2024-11-09-10-11-51 configuration =====

[2024-11-09 10:11:51,179][INFO] ===== start repair ======
[2024-11-09 10:11:51,179][INFO] For pgd attack net
[2024-11-09 10:11:52,022][INFO] --Test repair set accuracy 0.0
[2024-11-09 10:11:52,025][INFO] --Test original set accuracy 1.0
[2024-11-09 10:11:52,097][INFO] --Test test set accuracy 0.8833
[2024-11-09 10:11:52,101][INFO] --Test attack test set accuracy 0.004
[2024-11-09 10:11:52,173][INFO] --Test train set accuracy 0.9988
[2024-11-09 10:11:52,173][INFO] get the feature of the repairset, testset and trainset
[2024-11-09 10:11:52,363][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-09 10:11:52,363][INFO] --sample the 0 part of the originalset
[2024-11-09 10:11:52,364][INFO] --FGSM sample 1 image
[2024-11-09 10:11:52,787][INFO] --FGSM sample 2 image
[2024-11-09 10:11:53,209][INFO] --FGSM sample 3 image
[2024-11-09 10:11:53,637][INFO] --FGSM sample 4 image
[2024-11-09 10:11:54,065][INFO] --FGSM sample 5 image
[2024-11-09 10:11:54,498][INFO] --FGSM sample 6 image
[2024-11-09 10:11:54,925][INFO] --FGSM sample 7 image
[2024-11-09 10:11:55,348][INFO] --FGSM sample 8 image
[2024-11-09 10:11:55,769][INFO] --FGSM sample 9 image
[2024-11-09 10:11:56,200][INFO] --FGSM sample 10 image
[2024-11-09 10:11:56,625][INFO] --FGSM sample 11 image
[2024-11-09 10:11:57,050][INFO] --FGSM sample 12 image
[2024-11-09 10:11:57,472][INFO] --FGSM sample 13 image
[2024-11-09 10:11:57,896][INFO] --FGSM sample 14 image
[2024-11-09 10:11:58,318][INFO] --FGSM sample 15 image
[2024-11-09 10:11:58,739][INFO] --FGSM sample 16 image
[2024-11-09 10:11:59,164][INFO] --FGSM sample 17 image
[2024-11-09 10:11:59,586][INFO] --FGSM sample 18 image
[2024-11-09 10:12:00,011][INFO] --FGSM sample 19 image
[2024-11-09 10:12:00,434][INFO] --FGSM sample 20 image
[2024-11-09 10:12:00,858][INFO] --FGSM sample 21 image
[2024-11-09 10:12:01,285][INFO] --FGSM sample 22 image
[2024-11-09 10:12:01,715][INFO] --FGSM sample 23 image
[2024-11-09 10:12:02,146][INFO] --FGSM sample 24 image
[2024-11-09 10:12:02,576][INFO] --FGSM sample 25 image
[2024-11-09 10:12:03,008][INFO] --FGSM sample 26 image
[2024-11-09 10:12:03,431][INFO] --FGSM sample 27 image
[2024-11-09 10:12:03,852][INFO] --FGSM sample 28 image
[2024-11-09 10:12:04,279][INFO] --FGSM sample 29 image
[2024-11-09 10:12:04,709][INFO] --FGSM sample 30 image
[2024-11-09 10:12:05,140][INFO] --FGSM sample 31 image
[2024-11-09 10:12:05,570][INFO] --FGSM sample 32 image
[2024-11-09 10:12:06,002][INFO] --FGSM sample 33 image
[2024-11-09 10:12:06,433][INFO] --FGSM sample 34 image
[2024-11-09 10:12:06,864][INFO] --FGSM sample 35 image
[2024-11-09 10:12:09,401][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-09 10:12:09,401][INFO] --FGSM sample 36 image
[2024-11-09 10:12:09,824][INFO] --FGSM sample 37 image
[2024-11-09 10:12:10,255][INFO] --FGSM sample 38 image
[2024-11-09 10:12:12,771][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-09 10:12:12,771][INFO] --FGSM sample 39 image
[2024-11-09 10:12:15,312][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-09 10:12:15,312][INFO] --FGSM sample 40 image
[2024-11-09 10:12:15,743][INFO] --FGSM sample 41 image
[2024-11-09 10:12:16,176][INFO] --FGSM sample 42 image
[2024-11-09 10:12:16,605][INFO] --FGSM sample 43 image
[2024-11-09 10:12:19,155][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-09 10:12:19,155][INFO] --FGSM sample 44 image
[2024-11-09 10:12:19,586][INFO] --FGSM sample 45 image
[2024-11-09 10:12:20,017][INFO] --FGSM sample 46 image
[2024-11-09 10:12:20,447][INFO] --FGSM sample 47 image
[2024-11-09 10:12:20,877][INFO] --FGSM sample 48 image
[2024-11-09 10:12:21,307][INFO] --FGSM sample 49 image
[2024-11-09 10:12:21,736][INFO] --FGSM sample 50 image
[2024-11-09 10:12:22,289][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-09 10:12:22,627][INFO] --Test repair set accuracy 0.0
[2024-11-09 10:12:22,634][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-09 10:12:22,636][INFO] [0m 0s (0.000 seconds)] Start repair part 0: 0
[2024-11-09 10:12:22,636][INFO] [0m 0s (0.000 seconds)] After epoch 0:
[2024-11-09 10:12:22,636][INFO] Loaded 50 abstractions for training.
[2024-11-09 10:12:22,690][INFO] min loss 0.5823476314544678, max loss 56.86256408691406.
[2024-11-09 10:12:22,690][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:2', dtype=torch.uint8).
[2024-11-09 10:12:22,705][INFO] Test set accuracy 0.8833.
[2024-11-09 10:12:22,706][INFO] repair set accuracy 0.06.
[2024-11-09 10:12:22,706][INFO] attacked test set accuracy 0.056.
[2024-11-09 10:12:22,706][INFO] 
[0m 0s (0.070 seconds)] Starting epoch 1:
[2024-11-09 10:12:22,887][INFO] [0m 0s (0.252 seconds)] After epoch 1:
[2024-11-09 10:12:22,887][INFO] Loaded 50 abstractions for training.
[2024-11-09 10:12:22,942][INFO] min loss 0.0, max loss 0.0.
[2024-11-09 10:12:22,942][INFO] All 50 abstractions certified.
[2024-11-09 10:12:22,957][INFO] Test set accuracy 0.8833.
[2024-11-09 10:12:22,957][INFO] repair set accuracy 1.0.
[2024-11-09 10:12:22,957][INFO] attacked test set accuracy 1.0.
[2024-11-09 10:12:22,963][INFO] Accuracy at every epoch: [0.8833, 0.8833]
[2024-11-09 10:12:22,963][INFO] After 1 epochs / 0m 0s (0.322 seconds), eventually the trained network got certified? True, with 0.8833 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-09 10:12:22,963][INFO] final test
[2024-11-09 10:12:22,965][INFO] --Test set accuracy 0.8833
[2024-11-09 10:12:22,972][INFO] --Test repair set accuracy 1.0
[2024-11-09 10:12:22,979][INFO] --Test attack test set accuracy 1.0
[2024-11-09 10:12:22,979][INFO] traing time 0.3434768139850348s
[2024-11-09 10:12:22,980][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-09 10:12:22,980][INFO] tensor([1.0000, 0.3217, 1.0000, 0.8833])
[2024-11-09 10:12:22,981][INFO] Total Cost Time: 31.80243679601699s.



