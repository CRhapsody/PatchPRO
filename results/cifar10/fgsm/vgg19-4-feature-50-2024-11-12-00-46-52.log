[2024-11-12 00:46:52,851][INFO] 
===== vgg19-4-feature-50-2024-11-12-00-46-52 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0004
  lr: 0.1
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: vgg19
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 4
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x735df318e550>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x735df318e5e0>
===== end of vgg19-4-feature-50-2024-11-12-00-46-52 configuration =====

[2024-11-12 00:46:52,851][INFO] ===== start repair ======
[2024-11-12 00:46:52,851][INFO] For pgd attack net
[2024-11-12 00:46:55,756][INFO] --Test repair set accuracy 0.0
[2024-11-12 00:46:55,759][INFO] --Test original set accuracy 1.0
[2024-11-12 00:46:56,127][INFO] --Test test set accuracy 0.9342
[2024-11-12 00:46:56,147][INFO] --Test attack test set accuracy 0.0
[2024-11-12 00:46:56,506][INFO] --Test train set accuracy 1.0
[2024-11-12 00:46:56,506][INFO] get the feature of the repairset, testset and trainset
[2024-11-12 00:46:57,258][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-12 00:46:57,258][INFO] --sample the 0 part of the originalset
[2024-11-12 00:46:57,259][INFO] --FGSM sample 1 image
[2024-11-12 00:46:57,690][INFO] --FGSM sample 2 image
[2024-11-12 00:46:58,104][INFO] --FGSM sample 3 image
[2024-11-12 00:46:58,517][INFO] --FGSM sample 4 image
[2024-11-12 00:46:58,933][INFO] --FGSM sample 5 image
[2024-11-12 00:46:59,352][INFO] --FGSM sample 6 image
[2024-11-12 00:46:59,805][INFO] --FGSM sample 7 image
[2024-11-12 00:47:00,297][INFO] --FGSM sample 8 image
[2024-11-12 00:47:00,790][INFO] --FGSM sample 9 image
[2024-11-12 00:47:03,532][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-12 00:47:03,532][INFO] --FGSM sample 10 image
[2024-11-12 00:47:03,995][INFO] --FGSM sample 11 image
[2024-11-12 00:47:04,488][INFO] --FGSM sample 12 image
[2024-11-12 00:47:04,972][INFO] --FGSM sample 13 image
[2024-11-12 00:47:05,450][INFO] --FGSM sample 14 image
[2024-11-12 00:47:05,927][INFO] --FGSM sample 15 image
[2024-11-12 00:47:06,390][INFO] --FGSM sample 16 image
[2024-11-12 00:47:06,772][INFO] --FGSM sample 17 image
[2024-11-12 00:47:07,152][INFO] --FGSM sample 18 image
[2024-11-12 00:47:07,534][INFO] --FGSM sample 19 image
[2024-11-12 00:47:07,918][INFO] --FGSM sample 20 image
[2024-11-12 00:47:08,303][INFO] --FGSM sample 21 image
[2024-11-12 00:47:08,684][INFO] --FGSM sample 22 image
[2024-11-12 00:47:09,067][INFO] --FGSM sample 23 image
[2024-11-12 00:47:09,449][INFO] --FGSM sample 24 image
[2024-11-12 00:47:09,832][INFO] --FGSM sample 25 image
[2024-11-12 00:47:10,217][INFO] --FGSM sample 26 image
[2024-11-12 00:47:10,599][INFO] --FGSM sample 27 image
[2024-11-12 00:47:10,990][INFO] --FGSM sample 28 image
[2024-11-12 00:47:11,384][INFO] --FGSM sample 29 image
[2024-11-12 00:47:11,770][INFO] --FGSM sample 30 image
[2024-11-12 00:47:12,156][INFO] --FGSM sample 31 image
[2024-11-12 00:47:12,540][INFO] --FGSM sample 32 image
[2024-11-12 00:47:14,804][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-12 00:47:14,804][INFO] --FGSM sample 33 image
[2024-11-12 00:47:15,189][INFO] --FGSM sample 34 image
[2024-11-12 00:47:15,573][INFO] --FGSM sample 35 image
[2024-11-12 00:47:15,951][INFO] --FGSM sample 36 image
[2024-11-12 00:47:16,320][INFO] --FGSM sample 37 image
[2024-11-12 00:47:16,692][INFO] --FGSM sample 38 image
[2024-11-12 00:47:17,062][INFO] --FGSM sample 39 image
[2024-11-12 00:47:17,433][INFO] --FGSM sample 40 image
[2024-11-12 00:47:17,802][INFO] --FGSM sample 41 image
[2024-11-12 00:47:20,060][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-12 00:47:20,060][INFO] --FGSM sample 42 image
[2024-11-12 00:47:20,512][INFO] --FGSM sample 43 image
[2024-11-12 00:47:20,983][INFO] --FGSM sample 44 image
[2024-11-12 00:47:21,454][INFO] --FGSM sample 45 image
[2024-11-12 00:47:21,926][INFO] --FGSM sample 46 image
[2024-11-12 00:47:22,395][INFO] --FGSM sample 47 image
[2024-11-12 00:47:22,869][INFO] --FGSM sample 48 image
[2024-11-12 00:47:23,336][INFO] --FGSM sample 49 image
[2024-11-12 00:47:23,806][INFO] --FGSM sample 50 image
[2024-11-12 00:47:24,416][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-12 00:47:24,758][INFO] --Test repair set accuracy 0.0
[2024-11-12 00:47:24,766][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-12 00:47:24,768][INFO] [0m 0s (0.000 seconds)] Start repair part 0: 0
[2024-11-12 00:47:24,768][INFO] [0m 0s (0.000 seconds)] After epoch 0:
[2024-11-12 00:47:24,768][INFO] Loaded 50 abstractions for training.
[2024-11-12 00:47:24,824][INFO] min loss 1.163408875465393, max loss 31.20293617248535.
[2024-11-12 00:47:24,825][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
        0, 0], device='cuda:2', dtype=torch.uint8).
[2024-11-12 00:47:24,840][INFO] Test set accuracy 0.9342.
[2024-11-12 00:47:24,840][INFO] repair set accuracy 0.0.
[2024-11-12 00:47:24,840][INFO] attacked test set accuracy 0.01.
[2024-11-12 00:47:24,841][INFO] 
[0m 0s (0.073 seconds)] Starting epoch 1:
[2024-11-12 00:47:25,037][INFO] [0m 0s (0.270 seconds)] After epoch 1:
[2024-11-12 00:47:25,038][INFO] Loaded 50 abstractions for training.
[2024-11-12 00:47:25,093][INFO] min loss 0.0, max loss 0.0.
[2024-11-12 00:47:25,093][INFO] All 50 abstractions certified.
[2024-11-12 00:47:25,109][INFO] Test set accuracy 0.9342.
[2024-11-12 00:47:25,109][INFO] repair set accuracy 1.0.
[2024-11-12 00:47:25,109][INFO] attacked test set accuracy 1.0.
[2024-11-12 00:47:25,124][INFO] Accuracy at every epoch: [0.9342, 0.9342]
[2024-11-12 00:47:25,124][INFO] After 1 epochs / 0m 0s (0.341 seconds), eventually the trained network got certified? True, with 0.9342 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-12 00:47:25,124][INFO] final test
[2024-11-12 00:47:25,126][INFO] --Test set accuracy 0.9342
[2024-11-12 00:47:25,133][INFO] --Test repair set accuracy 1.0
[2024-11-12 00:47:25,140][INFO] --Test attack test set accuracy 1.0
[2024-11-12 00:47:25,140][INFO] traing time 0.37249657791107893s
[2024-11-12 00:47:25,143][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-12 00:47:25,143][INFO] tensor([1.0000, 0.3415, 1.0000, 0.9342])
[2024-11-12 00:47:25,143][INFO] Total Cost Time: 32.293203788110986s.



