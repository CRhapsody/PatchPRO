[2024-11-12 01:33:53,073][INFO] 
===== resnet18-4-feature-50-2024-11-12-01-33-53 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0004
  lr: 0.1
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: resnet18
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 4
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x735df31d3ee0>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x735df3187ee0>
===== end of resnet18-4-feature-50-2024-11-12-01-33-53 configuration =====

[2024-11-12 01:33:53,073][INFO] ===== start repair ======
[2024-11-12 01:33:53,073][INFO] For pgd attack net
[2024-11-12 01:33:53,955][INFO] --Test repair set accuracy 0.0
[2024-11-12 01:33:53,958][INFO] --Test original set accuracy 0.98
[2024-11-12 01:33:54,082][INFO] --Test test set accuracy 0.8833
[2024-11-12 01:33:54,089][INFO] --Test attack test set accuracy 0.006
[2024-11-12 01:33:54,214][INFO] --Test train set accuracy 0.9988
[2024-11-12 01:33:54,214][INFO] get the feature of the repairset, testset and trainset
[2024-11-12 01:33:54,487][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-12 01:33:54,487][INFO] --sample the 0 part of the originalset
[2024-11-12 01:33:54,487][INFO] --FGSM sample 1 image
[2024-11-12 01:33:55,055][INFO] --FGSM sample 2 image
[2024-11-12 01:33:55,632][INFO] --FGSM sample 3 image
[2024-11-12 01:33:56,206][INFO] --FGSM sample 4 image
[2024-11-12 01:33:56,778][INFO] --FGSM sample 5 image
[2024-11-12 01:33:57,348][INFO] --FGSM sample 6 image
[2024-11-12 01:33:57,924][INFO] --FGSM sample 7 image
[2024-11-12 01:33:58,496][INFO] --FGSM sample 8 image
[2024-11-12 01:33:59,070][INFO] --FGSM sample 9 image
[2024-11-12 01:33:59,646][INFO] --FGSM sample 10 image
[2024-11-12 01:34:00,227][INFO] --FGSM sample 11 image
[2024-11-12 01:34:00,814][INFO] --FGSM sample 12 image
[2024-11-12 01:34:01,385][INFO] --FGSM sample 13 image
[2024-11-12 01:34:01,956][INFO] --FGSM sample 14 image
[2024-11-12 01:34:02,526][INFO] --FGSM sample 15 image
[2024-11-12 01:34:03,104][INFO] --FGSM sample 16 image
[2024-11-12 01:34:03,687][INFO] --FGSM sample 17 image
[2024-11-12 01:34:04,257][INFO] --FGSM sample 18 image
[2024-11-12 01:34:04,840][INFO] --FGSM sample 19 image
[2024-11-12 01:34:05,414][INFO] --FGSM sample 20 image
[2024-11-12 01:34:05,996][INFO] --FGSM sample 21 image
[2024-11-12 01:34:06,575][INFO] --FGSM sample 22 image
[2024-11-12 01:34:07,157][INFO] --FGSM sample 23 image
[2024-11-12 01:34:07,729][INFO] --FGSM sample 24 image
[2024-11-12 01:34:08,306][INFO] --FGSM sample 25 image
[2024-11-12 01:34:08,883][INFO] --FGSM sample 26 image
[2024-11-12 01:34:09,459][INFO] --FGSM sample 27 image
[2024-11-12 01:34:12,887][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-12 01:34:12,887][INFO] --FGSM sample 28 image
[2024-11-12 01:34:13,463][INFO] --FGSM sample 29 image
[2024-11-12 01:34:14,038][INFO] --FGSM sample 30 image
[2024-11-12 01:34:14,616][INFO] --FGSM sample 31 image
[2024-11-12 01:34:15,199][INFO] --FGSM sample 32 image
[2024-11-12 01:34:15,774][INFO] --FGSM sample 33 image
[2024-11-12 01:34:16,347][INFO] --FGSM sample 34 image
[2024-11-12 01:34:16,926][INFO] --FGSM sample 35 image
[2024-11-12 01:34:17,511][INFO] --FGSM sample 36 image
[2024-11-12 01:34:18,090][INFO] --FGSM sample 37 image
[2024-11-12 01:34:18,663][INFO] --FGSM sample 38 image
[2024-11-12 01:34:19,236][INFO] --FGSM sample 39 image
[2024-11-12 01:34:19,820][INFO] --FGSM sample 40 image
[2024-11-12 01:34:20,406][INFO] --FGSM sample 41 image
[2024-11-12 01:34:20,990][INFO] --FGSM sample 42 image
[2024-11-12 01:34:24,387][INFO] --The attack_datas is empty, we use the repair data as the attack data
[2024-11-12 01:34:24,387][INFO] --FGSM sample 43 image
[2024-11-12 01:34:24,963][INFO] --FGSM sample 44 image
[2024-11-12 01:34:25,537][INFO] --FGSM sample 45 image
[2024-11-12 01:34:26,116][INFO] --FGSM sample 46 image
[2024-11-12 01:34:26,689][INFO] --FGSM sample 47 image
[2024-11-12 01:34:27,268][INFO] --FGSM sample 48 image
[2024-11-12 01:34:27,851][INFO] --FGSM sample 49 image
[2024-11-12 01:34:28,422][INFO] --FGSM sample 50 image
[2024-11-12 01:34:30,853][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-12 01:34:33,374][INFO] --Test repair set accuracy 0.0
[2024-11-12 01:34:33,403][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-12 01:34:33,404][INFO] [0m 0s (0.000 seconds)] Start repair part 0: 0
[2024-11-12 01:34:33,404][INFO] [0m 0s (0.000 seconds)] After epoch 0:
[2024-11-12 01:34:33,404][INFO] Loaded 50 abstractions for training.
[2024-11-12 01:34:33,597][INFO] min loss 0.11791644990444183, max loss 19.77849769592285.
[2024-11-12 01:34:33,598][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:2', dtype=torch.uint8).
[2024-11-12 01:34:33,675][INFO] Test set accuracy 0.8833.
[2024-11-12 01:34:33,675][INFO] repair set accuracy 0.04.
[2024-11-12 01:34:33,675][INFO] attacked test set accuracy 0.046.
[2024-11-12 01:34:33,675][INFO] 
[0m 0s (0.271 seconds)] Starting epoch 1:
[2024-11-12 01:34:34,011][INFO] [0m 0s (0.607 seconds)] After epoch 1:
[2024-11-12 01:34:34,011][INFO] Loaded 50 abstractions for training.
[2024-11-12 01:34:34,199][INFO] min loss 0.0, max loss 0.0.
[2024-11-12 01:34:34,200][INFO] All 50 abstractions certified.
[2024-11-12 01:34:34,276][INFO] Test set accuracy 0.8833.
[2024-11-12 01:34:34,276][INFO] repair set accuracy 1.0.
[2024-11-12 01:34:34,276][INFO] attacked test set accuracy 1.0.
[2024-11-12 01:34:34,283][INFO] Accuracy at every epoch: [0.8833, 0.8833]
[2024-11-12 01:34:34,283][INFO] After 1 epochs / 0m 0s (0.872 seconds), eventually the trained network got certified? True, with 0.8833 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-12 01:34:34,283][INFO] final test
[2024-11-12 01:34:34,298][INFO] --Test set accuracy 0.8833
[2024-11-12 01:34:34,329][INFO] --Test repair set accuracy 1.0
[2024-11-12 01:34:34,360][INFO] --Test attack test set accuracy 1.0
[2024-11-12 01:34:34,360][INFO] traing time 0.9560409190598875s
[2024-11-12 01:34:34,363][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-12 01:34:34,363][INFO] tensor([1.0000, 0.8719, 1.0000, 0.8833])
[2024-11-12 01:34:34,364][INFO] Total Cost Time: 41.29117256519385s.



