[2024-11-12 07:57:33,533][INFO] 
===== resnet18-8-feature-50-2024-11-12-07-57-33 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0008
  lr: 0.1
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: resnet18
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 8
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x7e11413b4790>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7e10a0952dc0>
===== end of resnet18-8-feature-50-2024-11-12-07-57-33 configuration =====

[2024-11-12 07:57:33,533][INFO] ===== start repair ======
[2024-11-12 07:57:33,533][INFO] For pgd attack net
[2024-11-12 07:57:34,373][INFO] --Test repair set accuracy 0.0
[2024-11-12 07:57:34,376][INFO] --Test original set accuracy 1.0
[2024-11-12 07:57:34,452][INFO] --Test test set accuracy 0.8833
[2024-11-12 07:57:34,457][INFO] --Test attack test set accuracy 0.004
[2024-11-12 07:57:34,532][INFO] --Test train set accuracy 0.9988
[2024-11-12 07:57:34,532][INFO] get the feature of the repairset, testset and trainset
[2024-11-12 07:57:34,698][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-12 07:57:34,698][INFO] --sample the 0 part of the originalset
[2024-11-12 07:57:34,698][INFO] --PGD sample 1 image
[2024-11-12 07:57:38,909][INFO] --PGD sample 2 image
[2024-11-12 07:57:43,167][INFO] --PGD sample 3 image
[2024-11-12 07:57:47,483][INFO] --PGD sample 4 image
[2024-11-12 07:57:51,803][INFO] --PGD sample 5 image
[2024-11-12 07:57:56,144][INFO] --PGD sample 6 image
[2024-11-12 07:58:00,485][INFO] --PGD sample 7 image
[2024-11-12 07:58:04,904][INFO] --PGD sample 8 image
[2024-11-12 07:58:09,347][INFO] --PGD sample 9 image
[2024-11-12 07:58:13,769][INFO] --PGD sample 10 image
[2024-11-12 07:58:18,114][INFO] --PGD sample 11 image
[2024-11-12 07:58:22,447][INFO] --PGD sample 12 image
[2024-11-12 07:58:26,856][INFO] --PGD sample 13 image
[2024-11-12 07:58:31,299][INFO] --PGD sample 14 image
[2024-11-12 07:58:35,730][INFO] --PGD sample 15 image
[2024-11-12 07:58:40,184][INFO] --PGD sample 16 image
[2024-11-12 07:58:44,628][INFO] --PGD sample 17 image
[2024-11-12 07:58:49,043][INFO] --PGD sample 18 image
[2024-11-12 07:58:53,500][INFO] --PGD sample 19 image
[2024-11-12 07:58:57,918][INFO] --PGD sample 20 image
[2024-11-12 07:59:02,378][INFO] --PGD sample 21 image
[2024-11-12 07:59:06,827][INFO] --PGD sample 22 image
[2024-11-12 07:59:11,254][INFO] --PGD sample 23 image
[2024-11-12 07:59:15,654][INFO] --PGD sample 24 image
[2024-11-12 07:59:20,079][INFO] --PGD sample 25 image
[2024-11-12 07:59:24,412][INFO] --PGD sample 26 image
[2024-11-12 07:59:28,736][INFO] --PGD sample 27 image
[2024-11-12 07:59:33,055][INFO] --PGD sample 28 image
[2024-11-12 07:59:37,418][INFO] --PGD sample 29 image
[2024-11-12 07:59:41,862][INFO] --PGD sample 30 image
[2024-11-12 07:59:46,298][INFO] --PGD sample 31 image
[2024-11-12 07:59:50,734][INFO] --PGD sample 32 image
[2024-11-12 07:59:55,173][INFO] --PGD sample 33 image
[2024-11-12 07:59:59,607][INFO] --PGD sample 34 image
[2024-11-12 08:00:04,044][INFO] --PGD sample 35 image
[2024-11-12 08:00:08,478][INFO] --PGD sample 36 image
[2024-11-12 08:00:12,932][INFO] --PGD sample 37 image
[2024-11-12 08:00:17,377][INFO] --PGD sample 38 image
[2024-11-12 08:00:21,813][INFO] --PGD sample 39 image
[2024-11-12 08:00:26,264][INFO] --PGD sample 40 image
[2024-11-12 08:00:30,703][INFO] --PGD sample 41 image
[2024-11-12 08:00:35,133][INFO] --PGD sample 42 image
[2024-11-12 08:00:39,567][INFO] --PGD sample 43 image
[2024-11-12 08:00:43,987][INFO] --PGD sample 44 image
[2024-11-12 08:00:48,416][INFO] --PGD sample 45 image
[2024-11-12 08:00:52,838][INFO] --PGD sample 46 image
[2024-11-12 08:00:57,253][INFO] --PGD sample 47 image
[2024-11-12 08:01:01,662][INFO] --PGD sample 48 image
[2024-11-12 08:01:06,059][INFO] --PGD sample 49 image
[2024-11-12 08:01:10,445][INFO] --PGD sample 50 image
[2024-11-12 08:01:15,070][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-12 08:01:15,458][INFO] --Test repair set accuracy 0.0
[2024-11-12 08:01:15,466][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-12 08:01:15,467][INFO] [0m 0s (0.000 seconds)] Start repair part 0: 0
[2024-11-12 08:01:15,467][INFO] [0m 0s (0.000 seconds)] After epoch 0:
[2024-11-12 08:01:15,467][INFO] Loaded 50 abstractions for training.
[2024-11-12 08:01:15,521][INFO] min loss 0.9349038600921631, max loss 59.18113708496094.
[2024-11-12 08:01:15,522][INFO] Max loss at rule: tensor([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:2', dtype=torch.uint8).
[2024-11-12 08:01:15,537][INFO] Test set accuracy 0.8833.
[2024-11-12 08:01:15,537][INFO] repair set accuracy 0.0.
[2024-11-12 08:01:15,537][INFO] attacked test set accuracy 0.018.
[2024-11-12 08:01:15,537][INFO] 
[0m 0s (0.070 seconds)] Starting epoch 1:
[2024-11-12 08:01:15,720][INFO] [0m 0s (0.253 seconds)] After epoch 1:
[2024-11-12 08:01:15,720][INFO] Loaded 50 abstractions for training.
[2024-11-12 08:01:15,775][INFO] min loss 0.0, max loss 3.952953338623047.
[2024-11-12 08:01:15,775][INFO] Max loss at rule: tensor([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:2', dtype=torch.uint8).
[2024-11-12 08:01:15,790][INFO] Test set accuracy 0.8833.
[2024-11-12 08:01:15,791][INFO] repair set accuracy 1.0.
[2024-11-12 08:01:15,791][INFO] attacked test set accuracy 1.0.
[2024-11-12 08:01:15,806][INFO] Accuracy at every epoch: [0.8833, 0.8833]
[2024-11-12 08:01:15,806][INFO] After 1 epochs / 0m 0s (0.324 seconds), eventually the trained network got certified? False, with 0.8833 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-12 08:01:15,806][INFO] final test
[2024-11-12 08:01:15,808][INFO] --Test set accuracy 0.8833
[2024-11-12 08:01:15,815][INFO] --Test repair set accuracy 1.0
[2024-11-12 08:01:15,822][INFO] --Test attack test set accuracy 1.0
[2024-11-12 08:01:15,822][INFO] traing time 0.3554352030623704s
[2024-11-12 08:01:15,824][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-12 08:01:15,824][INFO] tensor([1.0000, 0.3242, 0.0000, 0.8833])
[2024-11-12 08:01:15,824][INFO] Total Cost Time: 222.2918612670619s.



