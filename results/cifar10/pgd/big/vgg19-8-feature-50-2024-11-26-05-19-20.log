[2024-11-26 05:19:20,885][INFO] 
===== vgg19-8-feature-50-2024-11-26-05-19-20 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0008
  lr: 10
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: vgg19
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 8
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x7cc451f589d0>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7cc53aeae040>
===== end of vgg19-8-feature-50-2024-11-26-05-19-20 configuration =====

[2024-11-26 05:19:20,885][INFO] ===== start repair ======
[2024-11-26 05:19:20,885][INFO] For pgd attack net
[2024-11-26 05:19:21,890][INFO] --Test repair set accuracy 0.0
[2024-11-26 05:19:21,893][INFO] --Test original set accuracy 1.0
[2024-11-26 05:19:22,116][INFO] --Test test set accuracy 0.9342
[2024-11-26 05:19:22,127][INFO] --Test attack test set accuracy 0.0
[2024-11-26 05:19:22,349][INFO] --Test train set accuracy 1.0
[2024-11-26 05:19:22,349][INFO] get the feature of the repairset, testset and trainset
[2024-11-26 05:19:23,158][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-26 05:19:23,159][INFO] --sample the 0 part of the originalset
[2024-11-26 05:19:23,159][INFO] --PGD sample 1 image
[2024-11-26 05:19:32,296][INFO] --PGD sample 2 image
[2024-11-26 05:19:41,650][INFO] --PGD sample 3 image
[2024-11-26 05:19:50,992][INFO] --PGD sample 4 image
[2024-11-26 05:20:00,344][INFO] --PGD sample 5 image
[2024-11-26 05:20:09,705][INFO] --PGD sample 6 image
[2024-11-26 05:20:19,034][INFO] --PGD sample 7 image
[2024-11-26 05:20:28,395][INFO] --PGD sample 8 image
[2024-11-26 05:20:37,701][INFO] --PGD sample 9 image
[2024-11-26 05:20:46,997][INFO] --PGD sample 10 image
[2024-11-26 05:20:56,370][INFO] --PGD sample 11 image
[2024-11-26 05:21:05,720][INFO] --PGD sample 12 image
[2024-11-26 05:21:15,080][INFO] --PGD sample 13 image
[2024-11-26 05:21:24,424][INFO] --PGD sample 14 image
[2024-11-26 05:21:33,706][INFO] --PGD sample 15 image
[2024-11-26 05:21:42,420][INFO] --PGD sample 16 image
[2024-11-26 05:21:51,008][INFO] --PGD sample 17 image
[2024-11-26 05:21:59,488][INFO] --PGD sample 18 image
[2024-11-26 05:22:07,713][INFO] --PGD sample 19 image
[2024-11-26 05:22:16,166][INFO] --PGD sample 20 image
[2024-11-26 05:22:24,653][INFO] --PGD sample 21 image
[2024-11-26 05:22:32,961][INFO] --PGD sample 22 image
[2024-11-26 05:22:41,225][INFO] --PGD sample 23 image
[2024-11-26 05:22:49,512][INFO] --PGD sample 24 image
[2024-11-26 05:22:58,049][INFO] --PGD sample 25 image
[2024-11-26 05:23:06,479][INFO] --PGD sample 26 image
[2024-11-26 05:23:14,970][INFO] --PGD sample 27 image
[2024-11-26 05:23:23,342][INFO] --PGD sample 28 image
[2024-11-26 05:23:31,820][INFO] --PGD sample 29 image
[2024-11-26 05:23:40,316][INFO] --PGD sample 30 image
[2024-11-26 05:23:48,731][INFO] --PGD sample 31 image
[2024-11-26 05:23:57,161][INFO] --PGD sample 32 image
[2024-11-26 05:24:05,592][INFO] --PGD sample 33 image
[2024-11-26 05:24:14,136][INFO] --PGD sample 34 image
[2024-11-26 05:24:22,547][INFO] --PGD sample 35 image
[2024-11-26 05:24:30,922][INFO] --PGD sample 36 image
[2024-11-26 05:24:39,412][INFO] --PGD sample 37 image
[2024-11-26 05:24:47,889][INFO] --PGD sample 38 image
[2024-11-26 05:24:56,323][INFO] --PGD sample 39 image
[2024-11-26 05:25:04,783][INFO] --PGD sample 40 image
[2024-11-26 05:25:13,224][INFO] --PGD sample 41 image
[2024-11-26 05:25:21,667][INFO] --PGD sample 42 image
[2024-11-26 05:25:30,178][INFO] --PGD sample 43 image
[2024-11-26 05:25:38,672][INFO] --PGD sample 44 image
[2024-11-26 05:25:47,119][INFO] --PGD sample 45 image
[2024-11-26 05:25:55,547][INFO] --PGD sample 46 image
[2024-11-26 05:26:04,066][INFO] --PGD sample 47 image
[2024-11-26 05:26:12,578][INFO] --PGD sample 48 image
[2024-11-26 05:26:21,111][INFO] --PGD sample 49 image
[2024-11-26 05:26:29,656][INFO] --PGD sample 50 image
[2024-11-26 05:26:38,807][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-26 05:26:39,940][INFO] --Test repair set accuracy 0.0
[2024-11-26 05:26:40,046][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-26 05:26:40,051][INFO] [0m 0s (0.001 seconds)] Start repair part 0: 0
[2024-11-26 05:26:40,051][INFO] [0m 0s (0.002 seconds)] After epoch 0:
[2024-11-26 05:26:40,051][INFO] Loaded 50 abstractions for training.
[2024-11-26 05:26:40,432][INFO] min loss 4.835031032562256, max loss 1035.05712890625.
[2024-11-26 05:26:40,433][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-26 05:26:40,467][INFO] Test set accuracy 0.9342.
[2024-11-26 05:26:40,467][INFO] repair set accuracy 0.0.
[2024-11-26 05:26:40,467][INFO] attacked test set accuracy 0.0.
[2024-11-26 05:26:40,467][INFO] 
[0m 0s (0.418 seconds)] Starting epoch 1:
[2024-11-26 05:26:41,286][INFO] [0m 1s (1.236 seconds)] After epoch 1:
[2024-11-26 05:26:41,286][INFO] Loaded 50 abstractions for training.
[2024-11-26 05:26:41,668][INFO] min loss 0.0, max loss 15.539989471435547.
[2024-11-26 05:26:41,669][INFO] Max loss at rule: tensor([0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-26 05:26:41,704][INFO] Test set accuracy 0.9342.
[2024-11-26 05:26:41,704][INFO] repair set accuracy 1.0.
[2024-11-26 05:26:41,705][INFO] attacked test set accuracy 1.0.
[2024-11-26 05:26:41,783][INFO] Accuracy at every epoch: [0.9342, 0.9342]
[2024-11-26 05:26:41,783][INFO] After 1 epochs / 0m 1s (1.655 seconds), eventually the trained network got certified? False, with 0.9342 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-26 05:26:41,783][INFO] final test
[2024-11-26 05:26:41,785][INFO] --Test set accuracy 0.9342
[2024-11-26 05:26:41,802][INFO] --Test repair set accuracy 1.0
[2024-11-26 05:26:41,818][INFO] --Test attack test set accuracy 1.0
[2024-11-26 05:26:41,818][INFO] traing time 1.7687459649750963s
[2024-11-26 05:26:41,842][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-26 05:26:41,843][INFO] tensor([1.0000, 1.6548, 0.0000, 0.9342])
[2024-11-26 05:26:41,844][INFO] Total Cost Time: 440.95939301600447s.



