[2024-11-09 16:04:08,998][INFO] 
===== resnet18-8-feature-50-2024-11-09-16-04-08 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0008
  lr: 10
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: resnet18
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 8
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x7c96bc818820>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7c961b592e50>
===== end of resnet18-8-feature-50-2024-11-09-16-04-08 configuration =====

[2024-11-09 16:04:08,998][INFO] ===== start repair ======
[2024-11-09 16:04:08,998][INFO] For pgd attack net
[2024-11-09 16:04:09,864][INFO] --Test repair set accuracy 0.0
[2024-11-09 16:04:09,866][INFO] --Test original set accuracy 1.0
[2024-11-09 16:04:09,941][INFO] --Test test set accuracy 0.8833
[2024-11-09 16:04:09,945][INFO] --Test attack test set accuracy 0.004
[2024-11-09 16:04:10,019][INFO] --Test train set accuracy 0.9988
[2024-11-09 16:04:10,019][INFO] get the feature of the repairset, testset and trainset
[2024-11-09 16:04:10,184][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-09 16:04:10,184][INFO] --sample the 0 part of the originalset
[2024-11-09 16:04:10,185][INFO] --PGD sample 1 image
[2024-11-09 16:04:15,609][INFO] --PGD sample 2 image
[2024-11-09 16:04:21,068][INFO] --PGD sample 3 image
[2024-11-09 16:04:26,525][INFO] --PGD sample 4 image
[2024-11-09 16:04:31,980][INFO] --PGD sample 5 image
[2024-11-09 16:04:37,438][INFO] --PGD sample 6 image
[2024-11-09 16:04:42,898][INFO] --PGD sample 7 image
[2024-11-09 16:04:48,356][INFO] --PGD sample 8 image
[2024-11-09 16:04:53,809][INFO] --PGD sample 9 image
[2024-11-09 16:04:59,268][INFO] --PGD sample 10 image
[2024-11-09 16:05:04,728][INFO] --PGD sample 11 image
[2024-11-09 16:05:10,187][INFO] --PGD sample 12 image
[2024-11-09 16:05:15,645][INFO] --PGD sample 13 image
[2024-11-09 16:05:21,105][INFO] --PGD sample 14 image
[2024-11-09 16:05:26,563][INFO] --PGD sample 15 image
[2024-11-09 16:05:32,023][INFO] --PGD sample 16 image
[2024-11-09 16:05:37,485][INFO] --PGD sample 17 image
[2024-11-09 16:05:42,946][INFO] --PGD sample 18 image
[2024-11-09 16:05:48,407][INFO] --PGD sample 19 image
[2024-11-09 16:05:53,868][INFO] --PGD sample 20 image
[2024-11-09 16:05:59,328][INFO] --PGD sample 21 image
[2024-11-09 16:06:04,789][INFO] --PGD sample 22 image
[2024-11-09 16:06:10,249][INFO] --PGD sample 23 image
[2024-11-09 16:06:15,710][INFO] --PGD sample 24 image
[2024-11-09 16:06:21,171][INFO] --PGD sample 25 image
[2024-11-09 16:06:26,632][INFO] --PGD sample 26 image
[2024-11-09 16:06:32,095][INFO] --PGD sample 27 image
[2024-11-09 16:06:37,552][INFO] --PGD sample 28 image
[2024-11-09 16:06:43,009][INFO] --PGD sample 29 image
[2024-11-09 16:06:48,462][INFO] --PGD sample 30 image
[2024-11-09 16:06:53,918][INFO] --PGD sample 31 image
[2024-11-09 16:06:59,372][INFO] --PGD sample 32 image
[2024-11-09 16:07:04,833][INFO] --PGD sample 33 image
[2024-11-09 16:07:10,294][INFO] --PGD sample 34 image
[2024-11-09 16:07:15,753][INFO] --PGD sample 35 image
[2024-11-09 16:07:21,213][INFO] --PGD sample 36 image
[2024-11-09 16:07:26,673][INFO] --PGD sample 37 image
[2024-11-09 16:07:32,136][INFO] --PGD sample 38 image
[2024-11-09 16:07:37,599][INFO] --PGD sample 39 image
[2024-11-09 16:07:43,060][INFO] --PGD sample 40 image
[2024-11-09 16:07:48,521][INFO] --PGD sample 41 image
[2024-11-09 16:07:53,982][INFO] --PGD sample 42 image
[2024-11-09 16:07:59,445][INFO] --PGD sample 43 image
[2024-11-09 16:08:04,906][INFO] --PGD sample 44 image
[2024-11-09 16:08:10,367][INFO] --PGD sample 45 image
[2024-11-09 16:08:15,827][INFO] --PGD sample 46 image
[2024-11-09 16:08:21,285][INFO] --PGD sample 47 image
[2024-11-09 16:08:26,745][INFO] --PGD sample 48 image
[2024-11-09 16:08:32,205][INFO] --PGD sample 49 image
[2024-11-09 16:08:37,654][INFO] --PGD sample 50 image
[2024-11-09 16:08:43,313][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-09 16:08:43,688][INFO] --Test repair set accuracy 0.0
[2024-11-09 16:08:43,696][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-09 16:08:43,697][INFO] [0m 0s (0.000 seconds)] Start repair part 0: 0
[2024-11-09 16:08:43,697][INFO] [0m 0s (0.000 seconds)] After epoch 0:
[2024-11-09 16:08:43,697][INFO] Loaded 50 abstractions for training.
[2024-11-09 16:08:43,751][INFO] min loss 0.9349038600921631, max loss 59.18113708496094.
[2024-11-09 16:08:43,751][INFO] Max loss at rule: tensor([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-09 16:08:43,766][INFO] Test set accuracy 0.8833.
[2024-11-09 16:08:43,766][INFO] repair set accuracy 0.0.
[2024-11-09 16:08:43,766][INFO] attacked test set accuracy 0.018.
[2024-11-09 16:08:43,766][INFO] 
[0m 0s (0.070 seconds)] Starting epoch 1:
[2024-11-09 16:08:43,956][INFO] [0m 0s (0.260 seconds)] After epoch 1:
[2024-11-09 16:08:43,956][INFO] Loaded 50 abstractions for training.
[2024-11-09 16:08:44,011][INFO] min loss 0.0, max loss 0.0.
[2024-11-09 16:08:44,011][INFO] All 50 abstractions certified.
[2024-11-09 16:08:44,026][INFO] Test set accuracy 0.8833.
[2024-11-09 16:08:44,026][INFO] repair set accuracy 1.0.
[2024-11-09 16:08:44,026][INFO] attacked test set accuracy 1.0.
[2024-11-09 16:08:44,032][INFO] Accuracy at every epoch: [0.8833, 0.8833]
[2024-11-09 16:08:44,032][INFO] After 1 epochs / 0m 0s (0.330 seconds), eventually the trained network got certified? True, with 0.8833 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-09 16:08:44,032][INFO] final test
[2024-11-09 16:08:44,034][INFO] --Test set accuracy 0.8833
[2024-11-09 16:08:44,040][INFO] --Test repair set accuracy 1.0
[2024-11-09 16:08:44,047][INFO] --Test attack test set accuracy 1.0
[2024-11-09 16:08:44,047][INFO] traing time 0.3510913870995864s
[2024-11-09 16:08:44,051][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-09 16:08:44,051][INFO] tensor([1.0000, 0.3297, 1.0000, 0.8833])
[2024-11-09 16:08:44,051][INFO] Total Cost Time: 275.05364479101263s.



