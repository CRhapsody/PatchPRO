[2024-11-12 00:47:20,328][INFO] 
===== vgg19-4-feature-50-2024-11-12-00-47-20 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 0.0004
  lr: 0.1
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: True
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: vgg19
  no_repair: False
  repair_number: 50
  repair_batchsize: 1
  repair_location: feature
  repair_radius: 4
  loose_bound: 0.0314
  divided_repair: 1
  accuracy_loss: <function CifarArgParser.setup_rest.<locals>.ce_loss at 0x727b5f70d700>
  reset_params: False
  train_datasize: 10000
  test_datasize: 500
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  sample_amount: 1000
  repair_batch_size: 50
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x727b5f70d790>
===== end of vgg19-4-feature-50-2024-11-12-00-47-20 configuration =====

[2024-11-12 00:47:20,328][INFO] ===== start repair ======
[2024-11-12 00:47:20,328][INFO] For pgd attack net
[2024-11-12 00:47:23,243][INFO] --Test repair set accuracy 0.0
[2024-11-12 00:47:23,247][INFO] --Test original set accuracy 1.0
[2024-11-12 00:47:23,615][INFO] --Test test set accuracy 0.9342
[2024-11-12 00:47:23,635][INFO] --Test attack test set accuracy 0.0
[2024-11-12 00:47:23,990][INFO] --Test train set accuracy 1.0
[2024-11-12 00:47:23,990][INFO] get the feature of the repairset, testset and trainset
[2024-11-12 00:47:24,738][INFO] sample the datas from the radius of the original data with pgd attack
[2024-11-12 00:47:24,738][INFO] --sample the 0 part of the originalset
[2024-11-12 00:47:24,739][INFO] --PGD sample 1 image
[2024-11-12 00:47:29,480][INFO] --PGD sample 2 image
[2024-11-12 00:47:34,202][INFO] --PGD sample 3 image
[2024-11-12 00:47:38,898][INFO] --PGD sample 4 image
[2024-11-12 00:47:43,570][INFO] --PGD sample 5 image
[2024-11-12 00:47:48,253][INFO] --PGD sample 6 image
[2024-11-12 00:47:52,934][INFO] --PGD sample 7 image
[2024-11-12 00:47:57,621][INFO] --PGD sample 8 image
[2024-11-12 00:48:02,321][INFO] --PGD sample 9 image
[2024-11-12 00:48:07,009][INFO] --PGD sample 10 image
[2024-11-12 00:48:11,691][INFO] --PGD sample 11 image
[2024-11-12 00:48:16,376][INFO] --PGD sample 12 image
[2024-11-12 00:48:21,079][INFO] --PGD sample 13 image
[2024-11-12 00:48:25,765][INFO] --PGD sample 14 image
[2024-11-12 00:48:30,489][INFO] --PGD sample 15 image
[2024-11-12 00:48:35,235][INFO] --PGD sample 16 image
[2024-11-12 00:48:39,943][INFO] --PGD sample 17 image
[2024-11-12 00:48:44,657][INFO] --PGD sample 18 image
[2024-11-12 00:48:49,397][INFO] --PGD sample 19 image
[2024-11-12 00:48:54,122][INFO] --PGD sample 20 image
[2024-11-12 00:48:58,863][INFO] --PGD sample 21 image
[2024-11-12 00:49:03,060][INFO] --PGD sample 22 image
[2024-11-12 00:49:06,721][INFO] --PGD sample 23 image
[2024-11-12 00:49:10,387][INFO] --PGD sample 24 image
[2024-11-12 00:49:14,042][INFO] --PGD sample 25 image
[2024-11-12 00:49:17,704][INFO] --PGD sample 26 image
[2024-11-12 00:49:21,461][INFO] --PGD sample 27 image
[2024-11-12 00:49:25,248][INFO] --PGD sample 28 image
[2024-11-12 00:49:28,907][INFO] --PGD sample 29 image
[2024-11-12 00:49:32,622][INFO] --PGD sample 30 image
[2024-11-12 00:49:36,426][INFO] --PGD sample 31 image
[2024-11-12 00:49:40,084][INFO] --PGD sample 32 image
[2024-11-12 00:49:43,746][INFO] --PGD sample 33 image
[2024-11-12 00:49:47,411][INFO] --PGD sample 34 image
[2024-11-12 00:49:51,065][INFO] --PGD sample 35 image
[2024-11-12 00:49:54,717][INFO] --PGD sample 36 image
[2024-11-12 00:49:58,381][INFO] --PGD sample 37 image
[2024-11-12 00:50:02,087][INFO] --PGD sample 38 image
[2024-11-12 00:50:05,748][INFO] --PGD sample 39 image
[2024-11-12 00:50:09,401][INFO] --PGD sample 40 image
[2024-11-12 00:50:13,070][INFO] --PGD sample 41 image
[2024-11-12 00:50:16,728][INFO] --PGD sample 42 image
[2024-11-12 00:50:20,388][INFO] --PGD sample 43 image
[2024-11-12 00:50:24,045][INFO] --PGD sample 44 image
[2024-11-12 00:50:27,701][INFO] --PGD sample 45 image
[2024-11-12 00:50:31,350][INFO] --PGD sample 46 image
[2024-11-12 00:50:35,021][INFO] --PGD sample 47 image
[2024-11-12 00:50:38,681][INFO] --PGD sample 48 image
[2024-11-12 00:50:42,342][INFO] --PGD sample 49 image
[2024-11-12 00:50:45,992][INFO] --PGD sample 50 image
[2024-11-12 00:50:50,689][INFO] --get the 0 part of the feature_lb and feature_ub
[2024-11-12 00:50:53,542][INFO] --Test repair set accuracy 0.0
[2024-11-12 00:50:53,550][INFO] --Patch network: --- feature PatchNet ---
Name: feature patch network 49
--- End of feature PatchNet ---
[2024-11-12 00:50:53,551][INFO] [0m 0s (0.000 seconds)] Start repair part 0: 0
[2024-11-12 00:50:53,551][INFO] [0m 0s (0.000 seconds)] After epoch 0:
[2024-11-12 00:50:53,551][INFO] Loaded 50 abstractions for training.
[2024-11-12 00:50:53,607][INFO] min loss 1.2948884963989258, max loss 75.54776000976562.
[2024-11-12 00:50:53,608][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0], device='cuda:3', dtype=torch.uint8).
[2024-11-12 00:50:53,623][INFO] Test set accuracy 0.9342.
[2024-11-12 00:50:53,623][INFO] repair set accuracy 0.0.
[2024-11-12 00:50:53,623][INFO] attacked test set accuracy 0.01.
[2024-11-12 00:50:53,623][INFO] 
[0m 0s (0.072 seconds)] Starting epoch 1:
[2024-11-12 00:50:53,807][INFO] [0m 0s (0.256 seconds)] After epoch 1:
[2024-11-12 00:50:53,807][INFO] Loaded 50 abstractions for training.
[2024-11-12 00:50:53,862][INFO] min loss 0.0, max loss 0.0.
[2024-11-12 00:50:53,862][INFO] All 50 abstractions certified.
[2024-11-12 00:50:53,877][INFO] Test set accuracy 0.9342.
[2024-11-12 00:50:53,877][INFO] repair set accuracy 1.0.
[2024-11-12 00:50:53,877][INFO] attacked test set accuracy 1.0.
[2024-11-12 00:50:53,893][INFO] Accuracy at every epoch: [0.9342, 0.9342]
[2024-11-12 00:50:53,893][INFO] After 1 epochs / 0m 0s (0.327 seconds), eventually the trained network got certified? True, with 0.9342 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-11-12 00:50:53,893][INFO] final test
[2024-11-12 00:50:53,895][INFO] --Test set accuracy 0.9342
[2024-11-12 00:50:53,902][INFO] --Test repair set accuracy 1.0
[2024-11-12 00:50:53,910][INFO] --Test attack test set accuracy 1.0
[2024-11-12 00:50:53,910][INFO] traing time 0.35910410014912486s
[2024-11-12 00:50:53,911][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-11-12 00:50:53,912][INFO] tensor([1.0000, 0.3265, 1.0000, 0.9342])
[2024-11-12 00:50:53,912][INFO] Total Cost Time: 213.58506099879742s.



