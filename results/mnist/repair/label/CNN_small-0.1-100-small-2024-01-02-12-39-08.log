[2024-01-02 12:39:08,885][INFO] 
===== CNN_small-0.1-100-small-2024-01-02-12-39-08 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 1e-05
  lr: 10
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: False
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: CNN_small
  no_repair: False
  repair_number: 100
  repair_batchsize: 1
  patch_size: small
  repair_radius: 0.1
  divided_repair: 1
  accuracy_loss: <function MnistArgParser.setup_rest.<locals>.ce_loss at 0x7f8de5b44790>
  reset_params: False
  train_datasize: 10000
  test_datasize: 1000
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  repair_batch_size: 100
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7f8cb5b2fc10>
===== end of CNN_small-0.1-100-small-2024-01-02-12-39-08 configuration =====

[2024-01-02 12:39:08,885][INFO] ===== start repair ======
[2024-01-02 12:39:08,885][INFO] For pgd attack net
[2024-01-02 12:39:09,021][INFO] --Test repair set accuracy 0.0
[2024-01-02 12:39:09,021][INFO] --Test original set accuracy 1.0
[2024-01-02 12:39:09,023][INFO] --Test test set accuracy 0.9827
[2024-01-02 12:39:09,024][INFO] --Test attack test set accuracy 0.0
[2024-01-02 12:39:09,026][INFO] --Test train set accuracy 0.9927
[2024-01-02 12:39:09,957][INFO] --small patch network: --- PatchNet ---
Name: small patch network 9
--- End of PatchNet ---
[2024-01-02 12:39:10,097][INFO] [0m 0s (0.139 seconds)] Start repair part 0: 0
[2024-01-02 12:39:10,097][INFO] [0m 0s (0.139 seconds)] After epoch 0:
[2024-01-02 12:39:10,097][INFO] Loaded 100 points for repair.
[2024-01-02 12:39:10,097][INFO] Loaded 1000 points for attack test.
[2024-01-02 12:39:10,097][INFO] Loaded 10000 points for training.
[2024-01-02 12:39:10,097][INFO] Loaded 100 abstractions for training.
[2024-01-02 12:39:10,281][INFO] min loss 2623.576416015625, max loss 3962.025390625.
[2024-01-02 12:39:10,281][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 1], device='cuda:3', dtype=torch.uint8).
[2024-01-02 12:39:10,293][INFO] Test set accuracy 0.9827.
[2024-01-02 12:39:10,293][INFO] repair set accuracy 0.02.
[2024-01-02 12:39:10,293][INFO] attacked test set accuracy 0.001.
[2024-01-02 12:39:10,293][INFO] 
[0m 0s (0.335 seconds)] Starting epoch 1:
[2024-01-02 12:39:10,393][INFO] [0m 0s (0.435 seconds)] After epoch 1:
[2024-01-02 12:39:10,393][INFO] Loaded 100 points for repair.
[2024-01-02 12:39:10,393][INFO] Loaded 1000 points for attack test.
[2024-01-02 12:39:10,393][INFO] Loaded 10000 points for training.
[2024-01-02 12:39:10,393][INFO] Loaded 100 abstractions for training.
[2024-01-02 12:39:10,574][INFO] min loss 2417.07421875, max loss 3748.1689453125.
[2024-01-02 12:39:10,575][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 1], device='cuda:3', dtype=torch.uint8).
[2024-01-02 12:39:10,586][INFO] Test set accuracy 0.9827.
[2024-01-02 12:39:10,586][INFO] repair set accuracy 1.0.
[2024-01-02 12:39:10,586][INFO] attacked test set accuracy 1.0.
[2024-01-02 12:39:10,598][INFO] Accuracy at every epoch: [0.9827, 0.9827]
[2024-01-02 12:39:10,598][INFO] After 1 epochs / 0m 0s (0.628 seconds), eventually the trained network got certified? False, with 0.9827 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-01-02 12:39:10,598][INFO] final test
[2024-01-02 12:39:10,601][INFO] --Test set accuracy 0.9827
[2024-01-02 12:39:10,606][INFO] --Test repair set accuracy 1.0
[2024-01-02 12:39:10,610][INFO] --Test attack test set accuracy 1.0
[2024-01-02 12:39:10,610][INFO] training time 0.6521185263991356s
[2024-01-02 12:39:10,612][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-01-02 12:39:10,612][INFO] tensor([1.0000, 0.6283, 0.0000, 0.9827])
[2024-01-02 12:39:10,612][INFO] Total Cost Time: 1.7276238054037094s.



