[2024-01-02 12:37:17,046][INFO] 
===== CNN_small-0.05-200-small-2024-01-02-12-37-17 configuration =====
  exp_fn: test_goal_repair
  seed: None
  dom: deeppoly
  start_abs_cnt: 500
  max_abs_cnt: 1000
  refine_top_k: 50
  tiny_width: 5e-06
  lr: 10
  batch_size: 50
  min_epochs: 15
  max_epochs: 100
  use_scheduler: True
  no_pts: False
  no_abs: False
  no_refine: True
  quiet: False
  debug: False
  net: CNN_small
  no_repair: False
  repair_number: 200
  repair_batchsize: 1
  patch_size: small
  repair_radius: 0.05
  divided_repair: 2
  accuracy_loss: <function MnistArgParser.setup_rest.<locals>.ce_loss at 0x7f8cb5b2fee0>
  reset_params: False
  train_datasize: 10000
  test_datasize: 2000
  max_verifier_sec: 300
  verifier_timeout_as_safe: True
  repair_batch_size: 200
  scheduler_fn: <function ExpArgParser.setup_rest.<locals>.<lambda> at 0x7f8cad87d310>
===== end of CNN_small-0.05-200-small-2024-01-02-12-37-17 configuration =====

[2024-01-02 12:37:17,046][INFO] ===== start repair ======
[2024-01-02 12:37:17,046][INFO] For pgd attack net
[2024-01-02 12:37:17,193][INFO] --Test repair set accuracy 0.0
[2024-01-02 12:37:17,194][INFO] --Test original set accuracy 0.97
[2024-01-02 12:37:17,195][INFO] --Test test set accuracy 0.9827
[2024-01-02 12:37:17,196][INFO] --Test attack test set accuracy 0.0
[2024-01-02 12:37:17,197][INFO] --Test train set accuracy 0.9927
[2024-01-02 12:37:20,637][INFO] --small patch network: --- PatchNet ---
Name: small patch network 9
--- End of PatchNet ---
[2024-01-02 12:37:20,779][INFO] [0m 0s (0.141 seconds)] Start repair part 0: 0
[2024-01-02 12:37:20,779][INFO] [0m 0s (0.141 seconds)] After epoch 0:
[2024-01-02 12:37:20,779][INFO] Loaded 100 points for repair.
[2024-01-02 12:37:20,779][INFO] Loaded 1000 points for attack test.
[2024-01-02 12:37:20,779][INFO] Loaded 10000 points for training.
[2024-01-02 12:37:20,779][INFO] Loaded 100 abstractions for training.
[2024-01-02 12:37:20,962][INFO] min loss 943.1394653320312, max loss 1806.76806640625.
[2024-01-02 12:37:20,962][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 1], device='cuda:3', dtype=torch.uint8).
[2024-01-02 12:37:20,971][INFO] Test set accuracy 0.9827.
[2024-01-02 12:37:20,971][INFO] repair set accuracy 0.02.
[2024-01-02 12:37:20,971][INFO] attacked test set accuracy 0.027.
[2024-01-02 12:37:20,971][INFO] 
[0m 0s (0.333 seconds)] Starting epoch 1:
[2024-01-02 12:37:21,072][INFO] [0m 0s (0.435 seconds)] After epoch 1:
[2024-01-02 12:37:21,072][INFO] Loaded 100 points for repair.
[2024-01-02 12:37:21,072][INFO] Loaded 1000 points for attack test.
[2024-01-02 12:37:21,072][INFO] Loaded 10000 points for training.
[2024-01-02 12:37:21,072][INFO] Loaded 100 abstractions for training.
[2024-01-02 12:37:21,254][INFO] min loss 745.4669799804688, max loss 1612.96435546875.
[2024-01-02 12:37:21,254][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 1], device='cuda:3', dtype=torch.uint8).
[2024-01-02 12:37:21,265][INFO] Test set accuracy 0.9827.
[2024-01-02 12:37:21,265][INFO] repair set accuracy 1.0.
[2024-01-02 12:37:21,265][INFO] attacked test set accuracy 1.0.
[2024-01-02 12:37:21,273][INFO] Accuracy at every epoch: [0.9827, 0.9827]
[2024-01-02 12:37:21,273][INFO] After 1 epochs / 0m 0s (0.627 seconds), eventually the trained network got certified? False, with 0.9827 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-01-02 12:37:21,408][INFO] [0m 0s (0.770 seconds)] Start repair part 1: 100
[2024-01-02 12:37:21,408][INFO] [0m 0s (0.770 seconds)] After epoch 0:
[2024-01-02 12:37:21,408][INFO] Loaded 100 points for repair.
[2024-01-02 12:37:21,408][INFO] Loaded 1000 points for attack test.
[2024-01-02 12:37:21,408][INFO] Loaded 10000 points for training.
[2024-01-02 12:37:21,408][INFO] Loaded 100 abstractions for training.
[2024-01-02 12:37:21,593][INFO] min loss 712.4888916015625, max loss 1691.84912109375.
[2024-01-02 12:37:21,594][INFO] Max loss at rule: tensor([0, 0, 0, 0, 0, 0, 1, 0, 0, 0], device='cuda:3', dtype=torch.uint8).
[2024-01-02 12:37:21,602][INFO] Test set accuracy 0.9827.
[2024-01-02 12:37:21,603][INFO] repair set accuracy 1.0.
[2024-01-02 12:37:21,603][INFO] attacked test set accuracy 1.0.
[2024-01-02 12:37:21,611][INFO] Accuracy at every epoch: [0.9827]
[2024-01-02 12:37:21,611][INFO] After 0 epochs / 0m 0s (0.965 seconds), eventually the trained network got certified? False, with 0.9827 accuracy on test set,with 1.0000 accuracy on repair set,with 1.0000 accuracy on attack test set.
[2024-01-02 12:37:21,611][INFO] final test
[2024-01-02 12:37:21,613][INFO] --Test set accuracy 0.9827
[2024-01-02 12:37:21,617][INFO] --Test repair set accuracy 1.0
[2024-01-02 12:37:21,620][INFO] --Test attack test set accuracy 1.0
[2024-01-02 12:37:21,620][INFO] training time 0.9827579595148563s
[2024-01-02 12:37:21,622][INFO] === Avg <epochs, train_time, certified, accuracy> for pgd attack networks:
[2024-01-02 12:37:21,622][INFO] tensor([0.0000, 0.9651, 0.0000, 0.9827])
[2024-01-02 12:37:21,625][INFO] Total Cost Time: 4.580038629472256s.



